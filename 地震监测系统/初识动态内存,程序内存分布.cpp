#include <stdio.h>
#include <stdlib.h>

/*
1、栈区(sack) ;由编译器自动分配释放,存放函数的参数值，局部变量值等。
2、堆区(heap) :一般由程序员分配释放，随叫随到，挥之即走。
3、全局静态区(static) ;全局变量和静态变量的存储是放在一起的，在程序编译时分配。
4、文字常量区:存放常量字符串◆
5、程序代码区:存放函数体(包括类的成员函数、全局函数》的二进制代码
*/

void 函数是栈区(const char 常量指针[]) {
	printf("hello,%s\n",常量指针);
}

int main(void) {
	//函数是栈区("你好骚呀");
	int 临时工 = 0;//农民数量
	int* 宿舍号 = NULL;
	printf("请输入需要雇佣的农民数量:\n");
	while(1){
	scanf_s("%d", &临时工);
	if (临时工 <= 0) {
		printf("没有人?再招多几个人\n");
	}else { break; }
	}
	while(1){//堆的示例,while没有作用,只是我用来收纳而已
		宿舍号 = new int [临时工];//动态内存,[多少个临时工]就租多少个宿舍
		for (int i = 0; i < 临时工; i++) {//给临时工分配宿舍
			*(宿舍号 + i) = i + 1;//赋值,分配宿舍
		}

		for (int i = 0; i < 临时工; i++) {//去慰问临时工,也查看一下有没人不干了
			printf("第%d个临时工所在宿舍号:%d \n",i+1, 宿舍号[i]);//访问
		}

		printf("---------over--------\n");
		printf("活干完了,大家辛苦了,我们别见面了,拜拜.\n");

		//把动态内存(宿舍号)空间摧毁(释放)了
		delete[] 宿舍号;//把房给退了
		//如果没delete的话,那么空间一直会被占用,房钱要一直的出,直到return
		//delete后的动态内存,禁止访问.空间都没有了,还能访问到哪去?
		break;
	}

	system("pause");
	return 0;//操作系统
}